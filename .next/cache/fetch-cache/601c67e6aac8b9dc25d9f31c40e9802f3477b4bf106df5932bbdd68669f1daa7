{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/rss+xml; charset=UTF-8","date":"Fri, 14 Mar 2025 10:04:18 GMT","etag":"\"35d32a7cebe9bdab695cd254d7e13ce8\"","host-header":"8441280b0c35cbc1147f8ba998a563a7","last-modified":"Fri, 14 Mar 2025 09:02:15 GMT","link":"<https://www.artificialintelligence-news.com/wp-json/>; rel=\"https://api.w.org/\", <https://www.artificialintelligence-news.com/>; rel=\"canonical\"","server":"nginx","transfer-encoding":"chunked","x-cache-enabled":"True","x-content-type-options":"nosniff","x-httpd-modphp":"1","x-proxy-cache":"HIT","x-xss-protection":"1; mode=block"},"body":"<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>AI News</title>
	<atom:link href="https://www.artificialintelligence-news.com/feed/" rel="self" type="application/rss+xml" />
	<link>https://www.artificialintelligence-news.com/</link>
	<description>Artificial Intelligence News</description>
	<lastBuildDate>Fri, 14 Mar 2025 09:02:15 +0000</lastBuildDate>
	<language>en-GB</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	

<image>
	<url>https://www.artificialintelligence-news.com/wp-content/uploads/2020/09/cropped-ai-icon-32x32.png</url>
	<title>AI News</title>
	<link>https://www.artificialintelligence-news.com/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Manus AI agent: breakthrough in China&#8217;s agentic AI</title>
		<link>https://www.artificialintelligence-news.com/news/manus-ai-agent-breakthrough-in-chinas-agentic-ai/</link>
					<comments>https://www.artificialintelligence-news.com/news/manus-ai-agent-breakthrough-in-chinas-agentic-ai/#respond</comments>
		
		<dc:creator><![CDATA[Dashveenjit Kaur]]></dc:creator>
		<pubDate>Fri, 14 Mar 2025 08:35:43 +0000</pubDate>
				<category><![CDATA[AGI]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[ai]]></category>
		<category><![CDATA[artificial intelligence]]></category>
		<category><![CDATA[China]]></category>
		<category><![CDATA[china ai]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104781</guid>

					<description><![CDATA[<p>Manus AI agent is China&#8217;s latest artificial intelligence breakthrough that&#8217;s turning heads in Silicon Valley and beyond. Manus was launched last week via an invitation-only preview, and represents China&#8217;s most ambitious entry into the emerging AI agent market. Unlike anything seen to date, the Manus AI agent doesn&#8217;t just chat with users &#8211; it is [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/manus-ai-agent-breakthrough-in-chinas-agentic-ai/">Manus AI agent: breakthrough in China&#8217;s agentic AI</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Manus AI agent is China&#8217;s latest artificial intelligence breakthrough that&#8217;s turning heads in Silicon Valley and beyond. Manus was launched last week via an invitation-only preview, and represents China&#8217;s most ambitious entry into the emerging AI agent market.</p>
<p>Unlike anything seen to date, the Manus AI agent doesn&#8217;t just chat with users &#8211; it is allegedly capable of independently tackling complex multi-step tasks with minimal human guidance.</p>
<p>Developed by Chinese startup Butterfly Effect with financial backing from tech giant Tencent Holdings, Manus AI agent has captured global attention for its ability to bridge the gap between theoretical AI capabilities and practical, real-world applications. It uses an innovative multi-model architecture that combines the strengths of multiple leading language models.</p>
<h3>Breakthrough autonomous task execution</h3>
<p>In a post on X, Peak Ji Yichao, co-founder and chief scientist at Butterfly Effect, said that the agentic AI was built using existing large language models, including Anthropic&#8217;s Claude and fine-tuned versions of <a href="https://www.artificialintelligence-news.com/news/could-alibabas-qwen-ai-power-the-next-generation-of-iphones-in-china/">Alibaba&#8217;s open-source Qwen</a>.</p>
<p>Its multi-model nature allows Manus to use different AI strengths according to what&#8217;s demanded of it, resulting in more sophisticated reasoning and execution capabilities.</p>
<p>&#8220;The Manus AI agent represents a fundamentally different approach to artificial intelligence,&#8221; <em>CNN Business</em> stated. According to coverage, Manus &#8220;can carry out complex, multi-step tasks like screening resumés and creating a website,&#8221; and &#8220;doesn&#8217;t only generate ideas but delivers tangible results, like producing a report recommending properties to buy based on specific criteria.&#8221;</p>
<h3>Real-world performance assessment</h3>
<p>In an extensive hands-on evaluation,<em> <a href="https://www.technologyreview.com/2025/03/11/1113133/manus-ai-review/">MIT Technology Review</a> </em>tested the Manus AI agent in three distinct task categories: compiling comprehensive journalist lists, conducting real estate searches with complex parameters, and identifying candidates for its prestigious Innovators Under 35 program.</p>
<p>&#8220;Using Manus feels like collaborating with a highly intelligent and efficient intern,&#8221; wrote Caiwei Chen in the assessment. &#8220;While it occasionally lacks understanding of what it&#8217;s being asked to do, makes incorrect assumptions, or cuts corners to expedite tasks, it explains its reasoning clearly, is remarkably adaptable, and can improve substantially when provided with detailed instructions or feedback.&#8221;</p>
<p>The evaluation revealed one of the Manus AI agent&#8217;s most distinctive features – its &#8220;Manus&#8217;s Computer&#8221; interface, which provides unprecedented transparency into the AI&#8217;s decision-making process.</p>
<p>The application window lets users observe the agent&#8217;s actions in real time and intervene when necessary, creating a collaborative human-AI workflow that maintains user control while automating complex processes.</p>
<h3>Technical implementation challenges</h3>
<p>Despite impressive capabilities, the Manus AI agent faces significant technical hurdles in its current implementation.<em>MIT Technology Review</em>documented frequent system crashes and timeout errors during extended use.</p>
<p>The platform displayed error messages, citing &#8220;high service load,&#8221; suggesting that computational infrastructure remains a limitation.</p>
<p>The technical constraints have contributed to highly restricted access, with less than 1% of wait-listed users receiving invite codes – the official Manus Discord channel has already accumulated over 186,000 members.</p>
<p>According to reporting from Chinese technology publication<em>36Kr</em>, the Manus AI agent&#8217;s operational costs remain relatively competitive at approximately $2 per task.</p>
<h3>Strategic partnership with Alibaba Cloud</h3>
<p>The creators of the Manus AI agent have announced a partnership with Alibaba&#8217;s cloud computing division. According to a <em><a href="https://www.scmp.com/tech/big-tech/article/3301986/ai-agent-manus-partners-alibabas-qwen-develop-chinese-version">South China Morning Post</a></em> report dated March 11, &#8220;Manus will engage in strategic cooperation with Alibaba&#8217;s Qwen team to meet the needs of Chinese users.&#8221;</p>
<p>The partnership aims to make Manus available on &#8220;domestic models and computing platforms,&#8221; although implementation timelines remain unspecified.</p>
<h3>Parallel advancements in foundation models</h3>
<p>The Manus-Alibaba partnership coincides with Alibaba&#8217;s advances in AI foundation model technology. On March 6, the company published its QwQ-32B reasoning model, claiming performance characteristics that surpass OpenAI&#8217;s o1-mini and <a href="https://www.artificialintelligence-news.com/news/deepseeks-ai-dominance-expands-from-evs-to-e-scooters-in-china/">rivalling DeepSeek&#8217;s R1 model</a>, despite a lower parameter count.</p>
<p><em>CNN Business</em>reported, &#8220;Alibaba touted its new model, QwQ-32B, in an online statement as delivering exceptional performance, almost entirely surpassing OpenAI-o1-mini and rivalling the strongest open-source reasoning model, DeepSeek-R1.&#8221;</p>
<p>The claimed efficiency gains are particularly noteworthy – Alibaba says QwQ-32B achieves competitive performance with just 32 billion parameters, compared to the 671 billion parameters in DeepSeek&#8217;s R1 model. The reduced model size suggests substantially lower computational requirements for training and inference with advanced reasoning capabilities.</p>
<h3>China&#8217;s strategic AI investments</h3>
<p>The Manus AI agent and Alibaba&#8217;s model advancements reflect China&#8217;s broader strategic emphasis on artificial intelligence development. The Chinese government has pledged explicit support for &#8220;emerging industries and industries of the future,&#8221; with artificial intelligence receiving particular focus alongside quantum computing and robotics.</p>
<p>Alibaba will invest 380 billion yuan (approximately $52.4 billion) in AI and cloud computing infrastructure in the next three years, a figure the company notes exceeds its total investments in these sectors during the previous decade.</p>
<p>As <em>MIT Technology Review&#8217;s</em> Caiwei Chen said, &#8220;Chinese AI companies are not just following in the footsteps of their Western counterparts. Rather than just innovating on base models, they are actively shaping the adoption of autonomous AI agents in their way.&#8221;</p>
<p>The Manus AI agent also exemplifies how China&#8217;s artificial intelligence ecosystem has evolved beyond merely replicating <a href="https://www.artificialintelligence-news.com/news/us-china-tech-war-escalates-with-new-ai-chips-export-controls/">Western advances</a>. Government policies promoting technological self-reliance, substantial funding initiatives, and a growing pipeline of specialised AI talent from Chinese universities have created conditions for original innovation.</p>
<p>Rather than a single approach to artificial intelligence, we are witnessing diverse implementation philosophies likely resulting in complementary systems optimised for different uses and cultural contexts.</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/manus-ai-agent-breakthrough-in-chinas-agentic-ai/">Manus AI agent: breakthrough in China&#8217;s agentic AI</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/manus-ai-agent-breakthrough-in-chinas-agentic-ai/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>ServiceNow deploys AI agents to boost enterprise workflows</title>
		<link>https://www.artificialintelligence-news.com/news/servicenow-deploys-ai-agents-boost-enterprise-workflows/</link>
					<comments>https://www.artificialintelligence-news.com/news/servicenow-deploys-ai-agents-boost-enterprise-workflows/#respond</comments>
		
		<dc:creator><![CDATA[Ryan Daws]]></dc:creator>
		<pubDate>Thu, 13 Mar 2025 16:40:58 +0000</pubDate>
				<category><![CDATA[Applications]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Companies]]></category>
		<category><![CDATA[Enterprise]]></category>
		<category><![CDATA[Virtual Assistants]]></category>
		<category><![CDATA[agentic ai]]></category>
		<category><![CDATA[agents]]></category>
		<category><![CDATA[ai]]></category>
		<category><![CDATA[artificial intelligence]]></category>
		<category><![CDATA[enterprise]]></category>
		<category><![CDATA[productivity]]></category>
		<category><![CDATA[servicenow]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104777</guid>

					<description><![CDATA[<p>ServiceNow has launched its Yokohama platform which introduces AI agents across various sectors to boost workflows and maximise end-to-end business impact. The Yokohama platform release features teams of preconfigured AI agents designed to deliver immediate productivity gains. These agents operate on a single, unified platform, ensuring seamless integration and coordination across different business functions. The [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/servicenow-deploys-ai-agents-boost-enterprise-workflows/">ServiceNow deploys AI agents to boost enterprise workflows</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p><a href="https://www.servicenow.com/">ServiceNow</a> has launched its Yokohama platform which introduces AI agents across various sectors to boost workflows and maximise end-to-end business impact.</p>



<p>The Yokohama platform release features teams of preconfigured AI agents designed to deliver immediate productivity gains. These agents operate on a single, unified platform, ensuring seamless integration and coordination across different business functions. The platform also includes capabilities to build, onboard, and manage the entire AI agent lifecycle, making it easier for enterprises to adopt and scale AI solutions.</p>



<p>Data is the lifeblood of AI, and ServiceNow recognises this by expanding its Knowledge Graph with advancements to its Common Service Data Model (CSDM). This expansion aims to break down barriers among data sources, enabling more connected and intelligent AI agents. By unifying data from various sources, ServiceNow&#8217;s platform ensures that AI agents can operate with a comprehensive view of the enterprise, driving more informed decisions and actions.</p>



<h3 class="wp-block-heading">The growing need for ‘Guardian Agents’</h3>



<p>According to Gartner, by 2028, 40% of CIOs will demand &#8216;Guardian Agents&#8217; to autonomously track, oversee, or contain the results of AI agent actions. This underscores the growing need for a coordinated, enterprise-wide approach to AI deployment and management.</p>



<p>ServiceNow&#8217;s Yokohama release addresses this need by serving as the AI agent control tower for enterprises. The platform removes common roadblocks such as data fragmentation, governance gaps, and real-time performance challenges, ensuring seamless data connectivity with Workflow Data Fabric.</p>



<p>Unlike other AI providers that operate in silos or require complex integrations, ServiceNow AI Agents are built on a single, enterprise-wide platform. This ensures seamless data connectivity and provides a single view of all workflows, AI, and automation needs.</p>



<p>Amit Zavery, President, Chief Product Officer, and Chief Operating Officer at ServiceNow, commented: &#8220;Agentic AI is the new frontier. Enterprise leaders are no longer just experimenting with AI agents; they&#8217;re demanding AI solutions that can help them achieve productivity at scale.</p>



<p>&#8220;ServiceNow’s industry‑leading agentic AI framework meets this need by delivering predictability and efficiency from the start. With the combination of agentic AI, data fabric, and workflow automation all on one platform, we’re making it easier for organisations to embed connected AI where work happens and both measure and drive business outcomes faster, smarter, and at scale.&#8221;</p>



<h3 class="wp-block-heading">New AI agents from ServiceNow aim to accelerate productivity</h3>



<p>ServiceNow&#8217;s new AI Agents are now available to accelerate productivity at scale. These agents are designed to drive real outcomes for enterprise-wide use cases. For example:</p>



<ul class="wp-block-list">
<li><strong>Security Operations (SecOps) expert AI agents:</strong> These agents transform security operations by streamlining the entire incident lifecycle, eliminating repetitive tasks, and empowering SecOps teams to focus on stopping real threats quickly.</li>



<li><strong>Autonomous change management AI agents:</strong> Acting like seasoned change managers, these agents generate custom implementation, test, and backout plans by analysing impact, historical data, and similar changes, ensuring seamless execution with minimal risk.</li>



<li><strong>Proactive network test &amp; repair AI agents:</strong> These AI-powered troubleshooters automatically detect, diagnose, and resolve network issues before they impact performance.</li>
</ul>



<p>ServiceNow AI Agent Orchestrator and AI Agent Studio are now generally available with expanded capabilities to govern the complete AI agent lifecycle.</p>



<p>These tools help to streamline the setup process with guided instructions, making it easier to design and configure new AI agents using natural language descriptions. Their expanded performance management capabilities include an analytics dashboard for visualising AI agent usage, quality, and value—ensuring that AI agent performance and ROI can be easily tracked.</p>



<p>At the core of the ServiceNow Platform is Workflow Data Fabric, enabling AI-powered workflows that integrate with an organisation&#8217;s data, regardless of the system or source. This fabric allows businesses to gain deeper insights through AI-driven contextualisation and decision intelligence while automating manual work and creating process efficiencies.</p>



<p>The Yokohama release continues to expand ServiceNow&#8217;s Knowledge Graph data capabilities with enhancements to its Common Service Data Model (CSDM). CSDM provides a standardised framework for managing IT and business services to accelerate quick, safe, and compliant technology deployments.</p>



<p>Several customers and partners have already seen the benefits of ServiceNow&#8217;s AI solutions. CANCOM, Cognizant, Davies, and Sentara have all praised the platform&#8217;s ability to drive efficiency, cost savings, and productivity. These organisations have successfully integrated ServiceNow&#8217;s AI agents into their operations.</p>



<p>Jason Wojahn, Global Head of the ServiceNow Business Group at Cognizant, said: “At Cognizant, we are helping companies harness the next phase of AI with agentic AI workflows that could bring unparalleled efficiency. We were the first to bring ServiceNow&#8217;s Workflow Data Fabric to market and are working to help our clients to seamlessly connect their data with AI.</p>



<p>“With the Yokohama release and the integration of AI agents onto the Now Platform, clients can now operate their agents virtually effortlessly with connected data, driving productivity and ROI across their entire business.”</p>



<p>Darrell Burnell, Group Head of Technology at Davies, added: “Agility is essential for Davies, given our work with clients in heavily regulated markets. We&#8217;ve transformed our agent experience with ServiceNow&#8217;s generative AI, deploying Now Assist for ITSM in just six weeks to streamline information retrieval and accelerate resolution times.”</p>



<p>ServiceNow&#8217;s Yokohama platform release is a step forward in the evolution of AI for business transformation. By <a href="https://www.developer-tech.com/news/openai-launches-tools-build-ai-agents-faster/">unleashing new AI agents</a> and expanding data capabilities, ServiceNow aims to empower businesses to achieve faster and smarter workflows to maximise impact.</p>



<p><em>(Image by <a href="https://pixabay.com/users/imcockpit-9934276/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=3634627">Thomas Fengler</a>)</em></p>



<p><strong>See also: </strong><a href="https://www.artificialintelligence-news.com/news/opera-introduces-browser-integrated-ai-agent/"><strong>Opera introduces browser-integrated AI agent</strong></a></p>



<figure class="wp-block-image size-full is-resized"><a href="https://www.ai-expo.net/"><img fetchpriority="high" decoding="async" width="728" height="90" src="https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01.png" alt="" class="wp-image-11874" style="width:800px;height:auto" srcset="https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01.png 728w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-300x37.png 300w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-380x47.png 380w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-350x43.png 350w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-100x12.png 100w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-60x7.png 60w" sizes="(max-width: 728px) 100vw, 728px" /></a></figure>



<p><strong>Want to learn more about AI and big data from industry leaders?</strong> Check out<a href="https://www.ai-expo.net/"> AI &amp; Big Data Expo</a> taking place in Amsterdam, California, and London. The comprehensive event is co-located with other leading events including <a href="https://intelligentautomation-conference.com/northamerica/">Intelligent Automation Conference</a>, <a href="https://www.blockchain-expo.com/">BlockX</a>,<a href="https://digitaltransformation-week.com/"> Digital Transformation Week</a>, and <a href="https://www.cybersecuritycloudexpo.com/">Cyber Security &amp; Cloud Expo</a>.</p>



<p>Explore other upcoming enterprise technology events and webinars powered by TechForge <a href="https://techforge.pub/events/">here</a>.</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/servicenow-deploys-ai-agents-boost-enterprise-workflows/">ServiceNow deploys AI agents to boost enterprise workflows</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/servicenow-deploys-ai-agents-boost-enterprise-workflows/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Gemma 3: Google launches its latest open AI models</title>
		<link>https://www.artificialintelligence-news.com/news/gemma-3-google-launches-its-latest-open-ai-models/</link>
					<comments>https://www.artificialintelligence-news.com/news/gemma-3-google-launches-its-latest-open-ai-models/#respond</comments>
		
		<dc:creator><![CDATA[Ryan Daws]]></dc:creator>
		<pubDate>Wed, 12 Mar 2025 09:08:41 +0000</pubDate>
				<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Companies]]></category>
		<category><![CDATA[Development]]></category>
		<category><![CDATA[Ethics & Society]]></category>
		<category><![CDATA[Google]]></category>
		<category><![CDATA[ai]]></category>
		<category><![CDATA[artificial intelligence]]></category>
		<category><![CDATA[development]]></category>
		<category><![CDATA[gemma]]></category>
		<category><![CDATA[gemma 3]]></category>
		<category><![CDATA[models]]></category>
		<category><![CDATA[open source]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104758</guid>

					<description><![CDATA[<p>Google has launched Gemma 3, the latest version of its family of open AI models that aim to set a new benchmark for AI accessibility. Built upon the foundations of the company’s Gemini 2.0 models, Gemma 3 is engineered to be lightweight, portable, and adaptable—enabling developers to create AI applications across a wide range of [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/gemma-3-google-launches-its-latest-open-ai-models/">Gemma 3: Google launches its latest open AI models</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Google has launched Gemma 3, the latest version of its family of open AI models that aim to set a new benchmark for AI accessibility.</p>



<p>Built upon the foundations of the company’s <a href="https://www.artificialintelligence-news.com/news/gemini-2-0-google-ushers-in-agentic-ai-era/">Gemini 2.0</a> models, Gemma 3 is engineered to be lightweight, portable, and adaptable—enabling developers to create AI applications across a wide range of devices.&nbsp;&nbsp;</p>



<p>This release comes hot on the heels of Gemma’s first birthday, an anniversary underscored by impressive adoption metrics. Gemma models have achieved more than 100 million downloads and spawned the creation of over 60,000 community-built variants. Dubbed the &#8220;Gemmaverse,&#8221; this ecosystem signals a thriving community aiming to democratise AI.&nbsp;&nbsp;</p>



<p>&#8220;The Gemma family of open models is foundational to our commitment to making useful AI technology accessible,&#8221; explained Google.</p>



<h3 class="wp-block-heading">Gemma 3: Features and capabilities</h3>



<p>Gemma 3 models are available in various sizes – 1B, 4B, 12B, and 27B parameters – allowing developers to select a model tailored to their specific hardware and performance requirements. These models promise faster execution, even on <a href="https://www.developer-tech.com/news/ai-model-claude-fully-automates-arduino-development-in-demo/">modest computational setups</a>, without compromising functionality or accuracy.</p>



<p>Here are some of the standout features of Gemma 3:&nbsp;&nbsp;</p>



<ul class="wp-block-list">
<li><strong>Single-accelerator performance:</strong> Gemma 3 sets a new benchmark for single-accelerator models. In preliminary human preference evaluations on the LMArena leaderboard, Gemma 3 outperformed rivals including Llama-405B, DeepSeek-V3, and o3-mini.</li>
</ul>



<ul class="wp-block-list">
<li><strong>Multilingual support across 140 languages:</strong> Catering to diverse audiences, Gemma 3 comes with pretrained capabilities for over 140 languages. Developers can <a href="https://www.developer-tech.com/news/openai-models-power-faster-smarter-code-development/">create applications</a> that connect with users in their native tongues, expanding the global reach of their projects.  </li>
</ul>



<ul class="wp-block-list">
<li><strong>Sophisticated text and visual analysis:</strong> With advanced text, image, and short video reasoning capabilities, developers can implement Gemma 3 to craft interactive and intelligent applications—addressing an array of use cases from content analysis to creative workflows.  </li>
</ul>



<ul class="wp-block-list">
<li><strong>Expanded context window:</strong> Offering a 128k-token context window, Gemma 3 can analyse and synthesise large datasets, making it ideal for applications requiring extended content comprehension.</li>
</ul>



<ul class="wp-block-list">
<li><strong>Function calling for workflow automation:</strong> With function calling support, developers can utilise structured outputs to automate processes and build agentic AI systems effortlessly.</li>
</ul>



<ul class="wp-block-list">
<li><strong>Quantised models for lightweight efficiency:</strong> Gemma 3 introduces official quantised versions, significantly reducing model size while preserving output accuracy—a bonus for developers optimising for mobile or resource-constrained environments.</li>
</ul>



<p>The model’s performance advantages are clearly illustrated in the Chatbot Arena Elo Score leaderboard. Despite requiring just a single NVIDIA H100 GPU, the flagship 27B version of Gemma 3 ranks among the top chatbots, achieving an Elo score of 1338. Many competitors demand up to 32 GPUs to deliver comparable performance.</p>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="643" src="https://www.artificialintelligence-news.com/wp-content/uploads/2025/03/gemma-3-google-open-source-ai-model-artificial-intelligence-models-benchmark-test-1024x643.jpg" alt="Google Gemma 3 performance illustrated on benchmark against both open source and proprietary AI models in the Chatbot Arena Elo Score leaderboard." class="wp-image-104759" srcset="https://www.artificialintelligence-news.com/wp-content/uploads/2025/03/gemma-3-google-open-source-ai-model-artificial-intelligence-models-benchmark-test-1024x643.jpg 1024w, https://www.artificialintelligence-news.com/wp-content/uploads/2025/03/gemma-3-google-open-source-ai-model-artificial-intelligence-models-benchmark-test-300x188.jpg 300w, https://www.artificialintelligence-news.com/wp-content/uploads/2025/03/gemma-3-google-open-source-ai-model-artificial-intelligence-models-benchmark-test-768x482.jpg 768w, https://www.artificialintelligence-news.com/wp-content/uploads/2025/03/gemma-3-google-open-source-ai-model-artificial-intelligence-models-benchmark-test-1536x964.jpg 1536w, https://www.artificialintelligence-news.com/wp-content/uploads/2025/03/gemma-3-google-open-source-ai-model-artificial-intelligence-models-benchmark-test-2048x1286.jpg 2048w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>One of Gemma 3&#8217;s strengths lies in its adaptability within developers’ existing workflows.&nbsp;&nbsp;</p>



<ul class="wp-block-list">
<li><strong>Diverse tooling compatibility:</strong> Gemma 3 supports popular AI libraries and tools, including Hugging Face Transformers, JAX, PyTorch, and Google AI Edge. For optimised deployment, platforms such as Vertex AI or Google Colab are ready to help developers get started with minimal hassle.  </li>



<li><strong>NVIDIA optimisations:</strong> Whether using entry-level GPUs like Jetson Nano or cutting-edge hardware like Blackwell chips, Gemma 3 ensures maximum performance, further simplified through the NVIDIA API Catalog.  </li>



<li><strong>Broadened hardware support:</strong> Beyond NVIDIA, Gemma 3 integrates with AMD GPUs via the ROCm stack and supports CPU execution with Gemma.cpp for added versatility.</li>
</ul>



<p>For immediate experiments, users can access Gemma 3 models via platforms such as Hugging Face and Kaggle, or take advantage of the Google AI Studio for in-browser deployment.</p>



<h3 class="wp-block-heading">Advancing responsible AI&nbsp;&nbsp;</h3>



<p>&#8220;We believe open models require careful risk assessment, and our approach balances innovation with safety,&#8221; explains Google.&nbsp;&nbsp;</p>



<p>Gemma 3&#8217;s team adopted stringent governance policies, applying fine-tuning and robust benchmarking to align the model with ethical guidelines. Given the models enhanced capabilities in STEM fields, it underwent specific evaluations to mitigate risks of misuse, such as generating harmful substances.</p>



<p>Google is pushing for collective efforts within the industry to create proportionate safety frameworks for increasingly powerful models.</p>



<p>To play its part, Google is launching ShieldGemma 2. The 4B image safety checker leverages Gemma 3&#8217;s architecture and outputs safety labels across categories such as dangerous content, explicit material, and violence. While offering out-of-the-box solutions, developers can customise the tool to meet tailored safety requirements.</p>



<p>The “Gemmaverse” isn’t just a technical ecosystem, it’s a community-driven movement. Projects such as AI Singapore’s SEA-LION v3, INSAIT’s BgGPT, and Nexa AI’s OmniAudio are testament to the power of collaboration within this ecosystem.&nbsp;&nbsp;</p>



<p>To bolster academic research, Google has also introduced the Gemma 3 Academic Program. Researchers can apply for $10,000 worth of Google Cloud credits to accelerate their AI-centric projects. Applications open today and remain available for four weeks.&nbsp;&nbsp;</p>



<p>With its accessibility, capabilities, and widespread compatibility, Gemma 3 makes a strong case for becoming a cornerstone in the AI development community.</p>



<p><em>(Image credit: Google)</em></p>



<p><strong>See also: </strong><a href="https://www.artificialintelligence-news.com/news/alibaba-qwen-qwq-32b-scaled-reinforcement-learning-showcase/"><strong>Alibaba Qwen QwQ-32B: Scaled reinforcement learning showcase</strong></a></p>



<figure class="wp-block-image size-full is-resized"><a href="https://www.ai-expo.net/"><img fetchpriority="high" decoding="async" width="728" height="90" src="https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01.png" alt="" class="wp-image-11874" style="width:800px;height:auto" srcset="https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01.png 728w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-300x37.png 300w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-380x47.png 380w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-350x43.png 350w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-100x12.png 100w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-60x7.png 60w" sizes="(max-width: 728px) 100vw, 728px" /></a></figure>



<p><strong>Want to learn more about AI and big data from industry leaders?</strong> Check out<a href="https://www.ai-expo.net/"> AI &amp; Big Data Expo</a> taking place in Amsterdam, California, and London. The comprehensive event is co-located with other leading events including <a href="https://intelligentautomation-conference.com/northamerica/">Intelligent Automation Conference</a>, <a href="https://www.blockchain-expo.com/">BlockX</a>,<a href="https://digitaltransformation-week.com/"> Digital Transformation Week</a>, and <a href="https://www.cybersecuritycloudexpo.com/">Cyber Security &amp; Cloud Expo</a>.</p>



<p>Explore other upcoming enterprise technology events and webinars powered by TechForge <a href="https://techforge.pub/events/">here</a>.</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/gemma-3-google-launches-its-latest-open-ai-models/">Gemma 3: Google launches its latest open AI models</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/gemma-3-google-launches-its-latest-open-ai-models/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Best data security platforms of 2025</title>
		<link>https://www.artificialintelligence-news.com/news/best-data-security-platforms-of-2025/</link>
					<comments>https://www.artificialintelligence-news.com/news/best-data-security-platforms-of-2025/#respond</comments>
		
		<dc:creator><![CDATA[Or Hillel]]></dc:creator>
		<pubDate>Wed, 12 Mar 2025 08:44:49 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[ai]]></category>
		<category><![CDATA[artificial intelligence]]></category>
		<category><![CDATA[security]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104737</guid>

					<description><![CDATA[<p>With the rapid growth in the generation, storage, and sharing of data, ensuring its security has become both a necessity and a formidable challenge. Data breaches, cyberattacks, and insider threats are constant risks that require sophisticated solutions. This is where Data Security Platforms come into play, providing organisations with centralised tools and strategies to protect [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/best-data-security-platforms-of-2025/">Best data security platforms of 2025</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>With the rapid growth in the generation, storage, and sharing of data, ensuring its security has become both a necessity and a formidable challenge. Data breaches, cyberattacks, and insider threats are constant risks that require sophisticated solutions. This is where Data Security Platforms come into play, providing organisations with centralised tools and strategies to protect sensitive information and maintain compliance.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Key components of data security platforms</h3>



<p>Effective DSPs are built on several core components that work together to protect data from unauthorised access, misuse, and theft. The components include:</p>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">1. Data discovery and classification</h4>



<p>Before data can be secured, it needs to be classified and understood. DSPs typically include tools that automatically discover and categorize data based on its sensitivity and use. For example:</p>



<ul class="wp-block-list">
<li>Personal identifiable information (PII): Names, addresses, social security numbers, etc.</li>
</ul>



<ul class="wp-block-list">
<li>Financial data: Credit card details, transaction records.</li>
</ul>



<ul class="wp-block-list">
<li>Intellectual property (IP): Trade secrets, proprietary designs.</li>
</ul>



<ul class="wp-block-list">
<li>Regulated data: Information governed by laws like GDPR, HIPAA, or CCPA.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>By identifying data types and categorizing them by sensitivity level, organisations can prioritise their security efforts.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">2. Data encryption</h4>



<p>Encryption transforms readable data into an unreadable format, ensuring that even if unauthorised users access the data, they cannot interpret it without the decryption key. Most DSPs support various encryption methods, including:</p>



<ul class="wp-block-list">
<li>At-rest encryption: Securing data stored on drives, databases, or other storage systems.</li>
</ul>



<ul class="wp-block-list">
<li>In-transit encryption: Protecting data as it moves between devices, networks, or applications.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Modern DSPs often deploy advanced encryption standards (AES) or bring-your-own-key (BYOK) solutions, ensuring data security even when using third-party cloud storage.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">3. Access control and identity management</h4>



<p>Managing who has access to data is a important aspect of data security. DSPs enforce robust role-based access control (RBAC), ensuring only authorised users and systems can access sensitive information. With identity and access management (IAM) integration, DSPs can enhance security by combining authentication methods like:</p>



<ul class="wp-block-list">
<li>Passwords.</li>
</ul>



<ul class="wp-block-list">
<li>Biometrics (e.g. fingerprint or facial recognition).</li>
</ul>



<ul class="wp-block-list">
<li>Multi-factor authentication (MFA).</li>
</ul>



<ul class="wp-block-list">
<li>Behaviour-based authentication (monitoring user actions for anomalies).</li>
</ul>



<div style="height:30px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">4. Data loss prevention (DLP)</h4>



<p>Data loss prevention tools in DSPs help prevent unauthorised sharing or exfiltration of sensitive data. They monitor and control data flows, blocking suspicious activity like:</p>



<ul class="wp-block-list">
<li>Sending confidential information over email.</li>
</ul>



<ul class="wp-block-list">
<li>Transferring sensitive data to unauthorised external devices.</li>
</ul>



<ul class="wp-block-list">
<li>Uploading important files to unapproved cloud services.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>By enforcing data-handling policies, DSPs help organisations maintain control over their sensitive information.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">5. Threat detection and response</h4>



<p>DSPs employ threat detection systems powered by machine learning, artificial intelligence (AI), and behaviour analytics to identify unauthorised or malicious activity. Common features include:</p>



<ul class="wp-block-list">
<li>Anomaly detection: Identifies unusual behaviour, like accessing files outside normal business hours.</li>
</ul>



<ul class="wp-block-list">
<li>Insider threat detection: Monitors employees or contractors who might misuse their access to internal data.</li>
</ul>



<ul class="wp-block-list">
<li>Real-time alerts: Provide immediate notifications when a potential threat is detected.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Some platforms also include automated response mechanisms to isolate affected data or deactivate compromised user accounts.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">6. Compliance audits and reporting</h4>



<p>Many industries are subject to strict data protection regulations, like GDPR, HIPAA, CCPA, or PCI DSS. DSPs help organisations comply with these laws by:</p>



<ul class="wp-block-list">
<li>Continuously monitoring data handling practices.</li>
</ul>



<ul class="wp-block-list">
<li>Generating detailed audit trails.</li>
</ul>



<ul class="wp-block-list">
<li>Providing pre-configured compliance templates and reporting tools.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>The features simplify regulatory audits and reduce the risk of non-compliance penalties.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Best data security platforms of 2025</h3>



<p>Whether you&#8217;re a small business or a large enterprise, these tools will help you manage risks, secure databases, and protect sensitive information.</p>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">1. Velotix</h4>



<p><a href="https://www.velotix.ai/">Velotix</a> is an AI-driven data security platform focused on policy automation and intelligent data access control. It simplifies compliance with stringent data regulations like GDPR, HIPAA, and CCPA, and helps organisations strike the perfect balance between accessibility and security. Key Features:</p>



<ul class="wp-block-list">
<li>AI-powered access governance: Velotix uses machine learning to ensure users only access data they need to see, based on dynamic access policies.</li>
</ul>



<ul class="wp-block-list">
<li>Seamless integration: It integrates smoothly with existing infrastructures across cloud and on-premises environments.</li>
</ul>



<ul class="wp-block-list">
<li>Compliance automation: Simplifies meeting legal and regulatory requirements by automating compliance processes.</li>
</ul>



<ul class="wp-block-list">
<li>Scalability: Ideal for enterprises with complex data ecosystems, supporting hundreds of terabytes of sensitive data.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Velotix stands out for its ability to reduce the complexity of data governance, making it a must-have in today&#8217;s security-first corporate world.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">2. NordLayer</h4>



<p>NordLayer, from the creators of NordVPN, offers a secure network access solution tailored for businesses. While primarily a network security tool, it doubles as a robust data security platform by ensuring end-to-end encryption for your data in transit.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Zero trust security: Implements a zero trust approach, meaning users and devices must be verified every time data access is requested.</li>
</ul>



<ul class="wp-block-list">
<li>AES-256 encryption Standards: Protects data flows with military-grade encryption.</li>
</ul>



<ul class="wp-block-list">
<li>Cloud versatility: Supports hybrid and multi-cloud environments for maximum flexibility.</li>
</ul>



<ul class="wp-block-list">
<li>Rapid deployment: Easy to implement even for smaller teams, requiring minimal IT involvement.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>NordLayer ensures secure, encrypted communications between your team and the cloud, offering peace of mind when managing sensitive data.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">3. HashiCorp Vault</h4>



<p>HashiCorp Vault is a leader in secrets management, encryption as a service, and identity-based access. Designed for developers, it simplifies access control without placing sensitive data at risk, making it important for modern application development.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Secrets management: Protect sensitive credentials like API keys, tokens, and passwords.</li>
</ul>



<ul class="wp-block-list">
<li>Dynamic secrets: Automatically generate temporary, time-limited credentials for improved security.</li>
</ul>



<ul class="wp-block-list">
<li>Encryption as a service: Offers flexible tools for encrypting any data across multiple environments.</li>
</ul>



<ul class="wp-block-list">
<li>Audit logging: Monitor data access attempts for greater accountability and compliance.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>With a strong focus on application-level security, HashiCorp Vault is ideal for organisations seeking granular control over sensitive operational data.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">4. Imperva Database Risk &amp; Compliance</h4>



<p>Imperva is a pioneer in database security. Its Database Risk &amp; Compliance solution combines analytics, automation, and real-time monitoring to protect sensitive data from breaches and insider threats.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Database activity monitoring (DAM): Tracks database activity in real time to identify unusual patterns.</li>
</ul>



<ul class="wp-block-list">
<li>Vulnerability assessment: Scans databases for security weaknesses and provides actionable remediation steps.</li>
</ul>



<ul class="wp-block-list">
<li>Cloud and hybrid deployment: Supports flexible environments, ranging from on-premises deployments to modern cloud setups.</li>
</ul>



<ul class="wp-block-list">
<li>Audit preparation: Simplifies audit readiness with detailed reporting tools and predefined templates.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Imperva&#8217;s tools are trusted by enterprises to secure their most confidential databases, ensuring compliance and top-notch protection.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">5. ESET</h4>



<p>ESET, a well-known name in cybersecurity, offers an enterprise-grade security solution that includes powerful data encryption tools. Famous for its malware protection, ESET combines endpoint security with encryption to safeguard sensitive information.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Endpoint encryption: Ensures data remains protected even if devices are lost or stolen.</li>
</ul>



<ul class="wp-block-list">
<li>Multi-platform support: Works across Windows, Mac, and Linux systems.</li>
</ul>



<ul class="wp-block-list">
<li>Proactive threat detection: Combines AI and machine learning to detect potential threats before they strike.</li>
</ul>



<ul class="wp-block-list">
<li>Ease of use: User-friendly dashboards enable intuitive management of security policies.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>ESET provides an all-in-one solution for companies needing endpoint protection, encryption, and proactive threat management.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">6. SQL Secure</h4>



<p>Aimed at database administrators, SQL Secure delivers specialised tools to safeguard SQL Server environments. It allows for detailed role-based analysis, helping organisations improve their database security posture and prevent data leaks.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Role analysis: Identifies and mitigates excessive or unauthorised permission assignments.</li>
</ul>



<ul class="wp-block-list">
<li>Dynamic data masking: Protects sensitive data by obscuring it in real-time in applications and queries.</li>
</ul>



<ul class="wp-block-list">
<li>Customisable alerts: Notify teams of improper database access or policy violations immediately.</li>
</ul>



<ul class="wp-block-list">
<li>Regulatory compliance: Predefined policies make it easy to align with GDPR, HIPAA, PCI DSS, and other regulations.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>SQL Secure is a tailored solution for businesses dependent on SQL databases, providing immediate insights and action plans for tighter security.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">7. Acra</h4>



<p>Acra is a modern, developer-friendly cryptographic tool engineered for data encryption and secure data lifecycle management. It brings cryptography closer to applications, ensuring deep-rooted data protection at every level.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Application-level encryption: Empowers developers to integrate customised encryption policies directly into their apps.</li>
</ul>



<ul class="wp-block-list">
<li>Intrusion detection: Monitors for data leaks with a robust intrusion detection mechanism.</li>
</ul>



<ul class="wp-block-list">
<li>End-to-end data security: Protect data at rest, in transit, and in use, making it more versatile than traditional encryption tools.</li>
</ul>



<ul class="wp-block-list">
<li>Open source availability: Trusted by developers thanks to its open-source model, offering transparency and flexibility.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Acra is particularly popular with startups and tech-savvy enterprises needing a lightweight, developer-first approach to securing application data.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">8. BigID</h4>



<p>BigID focuses on privacy, data discovery, and compliance by using AI to identify sensitive data across structured and unstructured environments. Known for its data intelligence capabilities, BigID is one of the most comprehensive platforms for analysing and protecting enterprise data.</p>



<p>Key Features:</p>



<ul class="wp-block-list">
<li>Data discovery: Automatically classify sensitive data like PII (Personally Identifiable Information) and PHI (Protected Health Information).</li>
</ul>



<ul class="wp-block-list">
<li>Privacy-by-design: Built to streamline compliance with global privacy laws like GDPR, CCPA, and more.</li>
</ul>



<ul class="wp-block-list">
<li>Risk management: Assess data risks and prioritise actions based on importance.</li>
</ul>



<ul class="wp-block-list">
<li>Integrations: Easily integrates with other security platforms and cloud providers for a unified approach.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>BigID excels at uncovering hidden risks and ensuring compliance, making it an essential tool for data-driven enterprises.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">9. DataSunrise Database Security</h4>



<p>DataSunrise specialises in database firewall protection and intrusion detection for a variety of databases, including SQL-based platforms, NoSQL setups, and cloud-hosted solutions. It focuses on safeguarding sensitive data while providing robust real-time monitoring.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Database firewall: Blocks unauthorised access attempts with role-specific policies.</li>
</ul>



<ul class="wp-block-list">
<li>Sensitive data discovery: Identifies risky data in your database for preventative action.</li>
</ul>



<ul class="wp-block-list">
<li>Audit reporting: Generate detailed investigative reports about database activity.</li>
</ul>



<ul class="wp-block-list">
<li>Cross-platform compatibility: Works with MySQL, PostgreSQL, Oracle, Amazon Aurora, Snowflake, and more.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>DataSunrise is highly configurable and scalable, making it a solid choice for organisations running diverse database environments.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">10. Covax Polymer</h4>



<p>Covax Polymer is an innovative data security platform dedicated to governing sensitive data use in cloud-based collaboration tools like Slack, Microsoft Teams, and Google Workspace. It&#8217;s perfect for businesses that rely on SaaS applications for productivity.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Real-time governance: Monitors and protects data transfers occurring across cloud collaboration tools.</li>
</ul>



<ul class="wp-block-list">
<li>Context-aware decisions: Evaluates interactions to identify potential risks, ensuring real-time security responses.</li>
</ul>



<ul class="wp-block-list">
<li>Data loss prevention (DLP): Prevents sensitive information from being shared outside approved networks.</li>
</ul>



<ul class="wp-block-list">
<li>Comprehensive reporting: Tracks and analyses data sharing trends, offering actionable insights for compliance.</li>
</ul>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Covax Polymer addresses the growing need for securing communications and shared data in collaborative workspaces.</p>



<p><em>(Image source: Unsplash)</em></p>



<p></p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/best-data-security-platforms-of-2025/">Best data security platforms of 2025</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/best-data-security-platforms-of-2025/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Best 7 news API data feeds</title>
		<link>https://www.artificialintelligence-news.com/news/best-7-news-api-data-feeds/</link>
					<comments>https://www.artificialintelligence-news.com/news/best-7-news-api-data-feeds/#respond</comments>
		
		<dc:creator><![CDATA[Or Hillel]]></dc:creator>
		<pubDate>Tue, 11 Mar 2025 11:22:55 +0000</pubDate>
				<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[ai]]></category>
		<category><![CDATA[api]]></category>
		<category><![CDATA[data]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104748</guid>

					<description><![CDATA[<p>Access to real-time and historical news data is important in today&#8217;s digital landscape. Businesses, developers, and analysts rely on news API data feeds to gather structured insights from various sources, ranging from global news outlets and blogs, to forums and social media. APIs help integrate content into applications and workflows, enabling decision-making and scalable solutions. [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/best-7-news-api-data-feeds/">Best 7 news API data feeds</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Access to real-time and historical news data is important in today&#8217;s digital landscape. Businesses, developers, and analysts rely on news API data feeds to gather structured insights from various sources, ranging from global news outlets and blogs, to forums and social media. APIs help integrate content into applications and workflows, enabling decision-making and scalable solutions.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">What are news API data feeds?</h3>



<p>News API data feeds are platforms that aggregate, organise, and deliver structured news data from multiple sources, like websites, blogs, forums, and online publications. They simplify the process of gathering information from different outlets and formatting it into machine-readable formats like JSON or XML. These feeds eliminate the manual effort of collecting and curating data by presenting structured content ready to be processed.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Top 7 news API data feeds</h3>



<p>Let&#8217;s explore seven top news API data feeds leading the industry. These tools provide businesses with real-time access, historical coverage, and features tailored to various industries.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">1. Webz.io</h4>



<p><a href="http://webz.io/">Webz.io</a> is one of the most comprehensive news APIs, offering both real-time and archived coverage from the open and deep web, as well as the dark web. It provides highly customisable data feeds for industries like finance, risk intelligence, and cybersecurity.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Access to open, deep, and dark web data.</li>
</ul>



<ul class="wp-block-list">
<li>Advanced filters for sentiment, topic, and geographic coverage.</li>
</ul>



<ul class="wp-block-list">
<li>Support for visualisation and actionable risk monitoring.</li>
</ul>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Use case: Media monitoring, sentiment analysis, and threat intelligence for corporate security teams and financial organisations.</p>



<p>Why Webz.io? Its expansive source list and deep customisation options make it ideal for specialised industries like cybersecurity and financial analytics.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">2. GNews API</h4>



<p>GNews API is a simple, lightweight platform that aggregates reliable news from around the globe. It is perfect for small-scale applications or developers looking for affordable yet efficient solutions.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Real-time global coverage.</li>
</ul>



<ul class="wp-block-list">
<li>Filters for topics, languages, and countries.</li>
</ul>



<ul class="wp-block-list">
<li>Affordable pricing plans suitable for startups.</li>
</ul>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Use case: Localisation-focused news widgets or small aggregators serving specific regional or language-based audiences.</p>



<p>Why GNews? Its intuitive design and affordability make GNews a great entry point for developers and startups.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">3. The Guardian API</h4>



<p>The Guardian API provides direct access to high-quality journalism from the Guardian&#8217;s editorial content. It offers structured news, tags, and metadata from one of the world&#8217;s most respected news organisations.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>High-quality editorial content.</li>
</ul>



<ul class="wp-block-list">
<li>Filtering by topic or category.</li>
</ul>



<ul class="wp-block-list">
<li>Media-rich datan integration, including multimedia embedding.</li>
</ul>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Use case: Apps or research projects requiring trusted editorial sources for accurate analysis or curated content.</p>



<p>Why The Guardian API? Focused on credible data, it works best for platforms and professionals prioritising journalistic integrity.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">4. Bloomberg API</h4>



<p>Renowned for its financial insights, Bloomberg API delivers in-depth business coverage and real-time data for institutions and professional investors. It specialises in market data, financial news, and economic reports.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Exclusive financial data and analysis.</li>
</ul>



<ul class="wp-block-list">
<li>Real-time market coverage.</li>
</ul>



<ul class="wp-block-list">
<li>Seamless integration with Bloomberg&#8217;s terminals.</li>
</ul>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Use case: Analysts and investment professionals monitoring market trends and making data-driven decisions.</p>



<p>Why Bloomberg? Its precise focus on finance makes it essential for institutions heavily reliant on actionable market news.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">5. Financial Times API</h4>



<p>The Financial Times API is a premium solution that supplies business and economic-focused news. It is built for professional teams that require deep insights into global markets and economic activity.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Premium content on global finance and markets.</li>
</ul>



<ul class="wp-block-list">
<li>Access to detailed economic reports and analyses.</li>
</ul>



<ul class="wp-block-list">
<li>Subscription access for gated content.</li>
</ul>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Use case: Economists, researchers, or executives tracking global economic trends and industry reports.</p>



<p>Why Financial Times? Its premium-quality data and economic insights provide unmatched value for businesses targeting comprehensive market analysis.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">6. Opoint</h4>



<p>Opoint specialises in news monitoring and sentiment analysis, making it particularly useful for PR, marketing, and branding teams. It supports multiple languages and global sources with cutting-edge media monitoring capabilities.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Real-time monitoring with sentiment tagging.</li>
</ul>



<ul class="wp-block-list">
<li>Multilingual and multi-source coverage.</li>
</ul>



<ul class="wp-block-list">
<li>Tailored brand monitoring and competitor tracking.</li>
</ul>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Use case: PR agencies and marketers monitoring sentiment shifts or competitive landscape changes like product launches.</p>



<p>Why Opoint? Its advanced monitoring features help organisations stay agile in rapidly shifting media environments.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h4 class="wp-block-heading">7. Mediastack API</h4>



<p>Mediastack combines accessibility with scalability, offering a mix of free plans for developers and paid tiers for advanced features. It aggregates news in real time from over 7,500 sources globally.</p>



<p>Key features:</p>



<ul class="wp-block-list">
<li>Free and affordable paid plans.</li>
</ul>



<ul class="wp-block-list">
<li>Multilingual support and geo-targeted searches.</li>
</ul>



<ul class="wp-block-list">
<li>Scalable for both startups and growing enterprises.</li>
</ul>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<p>Use case: Developers building applications that require versatile, budget-friendly news feeds with reliable real-time updates.</p>



<p>Why Mediastack? Its affordability and flexibility cater to businesses of all sizes, making it a versatile option for a wide range of users.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Use cases for news API data feeds</h3>



<p>The applications of news API data feeds are as diverse as the industries relying on them:</p>



<p><strong>Financial intelligence</strong>: Investment tools use APIs to analyse market-moving news in real time.</p>



<p><strong>Media monitoring</strong>: PR agencies use media insights to track brand mentions and sentiment.</p>



<p><strong>Risk assessment</strong>: Governments and corporations assess geopolitical risks or public sentiment.</p>



<p><strong>Content platforms</strong>: Aggregators curate articles, summaries, and headlines for apps/websites.</p>



<p><strong>AI &amp; predictive analysis</strong>: APIs provide data for machine learning models that forecast trends.</p>



<p><em>(Image source: Unsplash)</em></p>



<p></p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/best-7-news-api-data-feeds/">Best 7 news API data feeds</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/best-7-news-api-data-feeds/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>The ethics of AI and how they affect you</title>
		<link>https://www.artificialintelligence-news.com/news/the-ethics-of-ai-and-how-they-affect-you/</link>
					<comments>https://www.artificialintelligence-news.com/news/the-ethics-of-ai-and-how-they-affect-you/#respond</comments>
		
		<dc:creator><![CDATA[Hugo Farinha]]></dc:creator>
		<pubDate>Mon, 10 Mar 2025 06:39:00 +0000</pubDate>
				<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Ethics & Society]]></category>
		<category><![CDATA[data]]></category>
		<category><![CDATA[ethics]]></category>
		<category><![CDATA[framework]]></category>
		<category><![CDATA[privacy]]></category>
		<category><![CDATA[sustainability]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104703</guid>

					<description><![CDATA[<p>Having worked with AI since 2018, I’m watching its slow but steady pick-up alongside the unstructured bandwagon-jumping with considerable interest. Now that the initial fear has subsided somewhat about a robotic takeover, discussion about the ethics that will surround the integration of AI into everyday business structures has taken its place.&#160;&#160; A whole new range [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/the-ethics-of-ai-and-how-they-affect-you/">The ethics of AI and how they affect you</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Having worked with AI since 2018, I’m watching its slow but steady pick-up alongside the unstructured bandwagon-jumping with considerable interest. Now that the initial fear has subsided somewhat about a robotic takeover, discussion about the ethics that will surround the integration of AI into everyday business structures has taken its place.&nbsp;&nbsp;</p>



<p>A whole new range of roles will be required to handle ethics, governance and compliance, all of which are going to gain enormous value and importance to organisations.</p>



<p>Probably the most essential of these will be an AI Ethics Specialist, who will be required to ensure Agentic AI systems meet ethical standards like fairness and transparency.&nbsp;This role will involve using specialised tools and frameworks to address ethical concerns efficiently and avoid potential legal or reputational risks.&nbsp; Human oversight to ensure transparency and responsible ethics is essential to maintain the delicate balance between data driven decisions, intelligence and intuition.</p>



<p>In addition, roles like Agentic AI Workflow Designer, AI Interaction and Integration Designer will ensure AI integrates seamlessly across ecosystems and prioritises transparency, ethical considerations, and adaptability.&nbsp;An AI Overseer will also be required, to monitor the entire Agentic stack of agents and arbiters, the decision-making elements of AI.&nbsp;&nbsp;&nbsp;</p>



<p>For anyone embarking on the integration of AI into their organisation and wanting to ensure the technology is introduced and maintained responsibly, I can recommend consulting the United Nations’ principles.&nbsp;These 10 principles were created by the United Nations in 2022, in response to the ethical challenges raised by the increasing preponderance of AI.</p>



<p>So what are these ten principles, and how can we use them as a framework?</p>



<p><strong>First, do no harm&nbsp;</strong></p>



<p>As befits technology with an autonomous element, the first principle focuses on the deployment of AI systems in ways that will avoid any negative impact on social, cultural, economic, natural or political environments.&nbsp;An AI lifecycle should be designed to respect and protect human rights and freedoms.&nbsp;Systems should be monitored to ensure that that situation is maintained and no long-term damage is being done.</p>



<p><strong>Avoid AI for AI’s sake</strong></p>



<p>Ensure that the use of AI is justified, appropriate and not excessive.&nbsp;There is a distinct temptation to become over-zealous in the application of this exciting technology and it needs to be balanced against human needs and aims and should never be used at the expense of human dignity.&nbsp;</p>



<p><strong>Safety and security</strong></p>



<p>Safety and security risks should be identified, addressed and mitigated</p>



<p>throughout the life cycle of the AI system and on an on-going basis.&nbsp;Exactly the same robust health and safety frameworks should be applied to AI as to any other area of the business.&nbsp;</p>



<p><strong>Equality</strong></p>



<p>Similarly, AI should be deployed with the aim of ensuring the equal and just distribution of the benefits, risks and cost, and to prevent bias, deception, discrimination and stigma of any kind.</p>



<p><strong>Sustainability</strong></p>



<p>AI should be aimed at promoting environmental, economic and social sustainability. Continual assessment should be made to address negative impacts, including any on the generations to come.&nbsp;</p>



<p><strong>Data privacy, data protection and data governance</strong></p>



<p>Adequate data protection frameworks and data governance mechanisms should be established or enhanced to ensure that the privacy and rights of individuals are maintained in line with legal guidelines around data integrity and personal data protection. No AI system should impinge on the privacy of another human being.</p>



<p><strong>Human oversight</strong></p>



<p>Human oversight should be guaranteed to ensure that the outcomes of using AI are fair and just.&nbsp;Human-centric design practises should be employed and capacity to be given for a human to step in at any stage and make a decision on how and when AI should be used, and to over-ride any decision made by AI.&nbsp;Rather dramatically but entirely reasonably, the UN suggests any decision affecting life or death should not be left to AI.&nbsp;</p>



<p><strong>Transparency and Explainability</strong></p>



<p>This, to my mind, forms part of the guidelines around equality.&nbsp;Everyone using AI should fully understand the systems they are using, the decision-making processes used by the system and its ramifications.&nbsp;Individuals should be told when a decision regarding their rights, freedoms or benefits has been made by artificial intelligence, and most importantly, the explanation should be made in a way that makes it comprehensible.&nbsp;</p>



<p><strong>Responsibility and Accountability</strong></p>



<p>This is the whistleblower principle, that covers audit and due diligence as well as protection for whistleblowers to make sure that someone is responsible and accountable for the decisions made by, and use of, AI. Governance should be put in place around the ethical and legal responsibility of humans for any AI-based decisions.&nbsp;Any of these decisions that cause harm should be investigated and action taken.&nbsp;</p>



<p><strong>Inclusivity and participation</strong></p>



<p>Just as in any other area of business, when designing, deploying and using artificial intelligence systems, an inclusive, interdisciplinary and participatory approach should be taken, which also includes gender equality. Stakeholders and any communities that are affected should be informed and consulted and informed of any benefits and potential risks.&nbsp;</p>



<p>Building your AI integration around these central pillars should help you feel reassured that your entry into AI integration is built on an ethical and solid foundation.&nbsp;</p>



<p>Photo by <a href="https://unsplash.com/@tinkerman?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Immo Wegmann</a> on <a href="https://unsplash.com/photos/a-piece-of-cardboard-with-a-keyboard-appearing-through-it-vi1HXPw6hyw?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Unsplash</a></p>



<p><strong>Want to learn more about AI and big data from industry leaders?</strong>&nbsp;Check out<a href="https://www.ai-expo.net/">&nbsp;AI &amp; Big Data Expo</a>&nbsp;taking place in Amsterdam, California, and London. The comprehensive event is co-located with other leading events including&nbsp;<a href="https://intelligentautomation-conference.com/northamerica/">Intelligent Automation Conference</a>,&nbsp;<a href="https://www.blockchain-expo.com/">BlockX</a>,<a href="https://digitaltransformation-week.com/">&nbsp;Digital Transformation Week</a>, and&nbsp;<a href="https://www.cybersecuritycloudexpo.com/">Cyber Security &amp; Cloud Expo</a>.</p>



<p>Explore other upcoming enterprise technology events and webinars powered by TechForge&nbsp;<a href="https://techforge.pub/events/">here</a>.</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/the-ethics-of-ai-and-how-they-affect-you/">The ethics of AI and how they affect you</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/the-ethics-of-ai-and-how-they-affect-you/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Alibaba Qwen QwQ-32B: Scaled reinforcement learning showcase</title>
		<link>https://www.artificialintelligence-news.com/news/alibaba-qwen-qwq-32b-scaled-reinforcement-learning-showcase/</link>
					<comments>https://www.artificialintelligence-news.com/news/alibaba-qwen-qwq-32b-scaled-reinforcement-learning-showcase/#respond</comments>
		
		<dc:creator><![CDATA[Ryan Daws]]></dc:creator>
		<pubDate>Thu, 06 Mar 2025 09:14:13 +0000</pubDate>
				<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Companies]]></category>
		<category><![CDATA[Deep & Reinforcement Learning]]></category>
		<category><![CDATA[Development]]></category>
		<category><![CDATA[ai]]></category>
		<category><![CDATA[alibaba]]></category>
		<category><![CDATA[artificial intelligence]]></category>
		<category><![CDATA[models]]></category>
		<category><![CDATA[qwen]]></category>
		<category><![CDATA[qwq]]></category>
		<category><![CDATA[reinforcement learning]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104695</guid>

					<description><![CDATA[<p>The Qwen team at Alibaba has unveiled QwQ-32B, a 32 billion parameter AI model that demonstrates performance rivalling the much larger DeepSeek-R1. This breakthrough highlights the potential of scaling Reinforcement Learning (RL) on robust foundation models. The Qwen team have successfully integrated agent capabilities into the reasoning model, enabling it to think critically, utilise tools, [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/alibaba-qwen-qwq-32b-scaled-reinforcement-learning-showcase/">Alibaba Qwen QwQ-32B: Scaled reinforcement learning showcase</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>The Qwen team at Alibaba has unveiled QwQ-32B, a 32 billion parameter AI model that demonstrates performance rivalling the much larger <a href="https://www.artificialintelligence-news.com/news/deepseek-r1-reasoning-models-rival-openai-in-performance/">DeepSeek-R1</a>. This breakthrough highlights the potential of scaling Reinforcement Learning (RL) on robust foundation models.</p>



<p>The Qwen team have successfully integrated <a href="https://www.artificialintelligence-news.com/news/opera-introduces-browser-integrated-ai-agent/">agent capabilities</a> into the reasoning model, enabling it to think critically, utilise tools, and adapt its reasoning based on environmental feedback.</p>



<p>&#8220;Scaling RL has the potential to enhance model performance beyond conventional pretraining and post-training methods,&#8221; the team stated. &#8220;Recent studies have demonstrated that RL can significantly improve the reasoning capabilities of models.&#8221;</p>



<p>QwQ-32B achieves performance comparable to DeepSeek-R1, which boasts 671 billion parameters (with 37 billion activated), a testament to the effectiveness of RL when applied to robust foundation models pretrained on extensive world knowledge. This remarkable outcome underscores the potential of RL to bridge the gap between model size and performance.</p>



<p>The model has been evaluated across a range of benchmarks, including AIME24, LiveCodeBench, LiveBench, IFEval, and BFCL, designed to assess its mathematical reasoning, coding proficiency, and general problem-solving capabilities.</p>



<p>The results highlight QwQ-32B’s performance in comparison to other leading models, including DeepSeek-R1-Distilled-Qwen-32B, DeepSeek-R1-Distilled-Llama-70B, o1-mini, and the original DeepSeek-R1.</p>



<p><strong>Benchmark results:</strong></p>



<ul class="wp-block-list">
<li><strong>AIME24:</strong> QwQ-32B achieved 79.5, slightly behind DeepSeek-R1-6718’s 79.8, but significantly ahead of OpenAl-o1-mini’s 63.6 and the distilled models.</li>



<li><strong>LiveCodeBench:</strong> QwQ-32B scored 63.4, again closely matched by DeepSeek-R1-6718’s 65.9, and surpassing the distilled models and OpenAl-o1-mini’s 53.8.</li>



<li><strong>LiveBench:</strong> QwQ-32B achieved 73.1, with DeepSeek-R1-6718 scoring 71.6, and outperforming the distilled models and OpenAl-o1-mini’s 57.5.</li>



<li><strong>IFEval:</strong> QwQ-32B scored 83.9, very close to DeepSeek-R1-6718’s 83.3, and leading the distilled models and OpenAl-o1-mini’s 59.1.</li>



<li><strong>BFCL:</strong> QwQ-32B achieved 66.4, with DeepSeek-R1-6718 scoring 62.8, demonstrating a lead over the distilled models and OpenAl-o1-mini’s 49.3.</li>
</ul>



<p>The Qwen team&#8217;s approach involved a cold-start checkpoint and a multi-stage RL process driven by outcome-based rewards. The initial stage focused on scaling RL for math and coding tasks, utilising accuracy verifiers and code execution servers. The second stage expanded to general capabilities, incorporating rewards from general reward models and rule-based verifiers.</p>



<p>&#8220;We find that this stage of RL training with a small amount of steps can increase the performance of other general capabilities, such as instruction following, alignment with human preference, and agent performance, without significant performance drop in math and coding,&#8221; the team explained.</p>



<p>QwQ-32B is open-weight and available on <a href="https://huggingface.co/">Hugging Face</a> and <a href="https://www.modelscope.cn/">ModelScope</a> under the Apache 2.0 license, and is also accessible via Qwen Chat. The Qwen team views this as an initial step in scaling RL to enhance reasoning capabilities and aims to further explore the integration of agents with RL for long-horizon reasoning.</p>



<p>&#8220;As we work towards developing the next generation of Qwen, we are confident that combining stronger foundation models with RL powered by scaled computational resources will propel us closer to achieving Artificial General Intelligence (AGI),&#8221; the team stated.</p>



<p><strong>See also: </strong><a href="https://www.artificialintelligence-news.com/news/deepgram-nova-3-medical-ai-speech-model-healthcare-transcription-errors/"><strong>Deepgram Nova-3 Medical: AI speech model cuts healthcare transcription errors</strong></a></p>



<figure class="wp-block-image size-full is-resized"><a href="https://www.ai-expo.net/"><img fetchpriority="high" decoding="async" width="728" height="90" src="https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01.png" alt="" class="wp-image-11874" style="width:800px;height:auto" srcset="https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01.png 728w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-300x37.png 300w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-380x47.png 380w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-350x43.png 350w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-100x12.png 100w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-60x7.png 60w" sizes="(max-width: 728px) 100vw, 728px" /></a></figure>



<p><strong>Want to learn more about AI and big data from industry leaders?</strong> Check out<a href="https://www.ai-expo.net/"> AI &amp; Big Data Expo</a> taking place in Amsterdam, California, and London. The comprehensive event is co-located with other leading events including <a href="https://intelligentautomation-conference.com/northamerica/">Intelligent Automation Conference</a>, <a href="https://www.blockchain-expo.com/">BlockX</a>,<a href="https://digitaltransformation-week.com/"> Digital Transformation Week</a>, and <a href="https://www.cybersecuritycloudexpo.com/">Cyber Security &amp; Cloud Expo</a>.</p>



<p>Explore other upcoming enterprise technology events and webinars powered by TechForge <a href="https://techforge.pub/events/">here</a>.</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/alibaba-qwen-qwq-32b-scaled-reinforcement-learning-showcase/">Alibaba Qwen QwQ-32B: Scaled reinforcement learning showcase</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/alibaba-qwen-qwq-32b-scaled-reinforcement-learning-showcase/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>From punch cards to mind control: Human-computer interactions</title>
		<link>https://www.artificialintelligence-news.com/news/from-punch-cards-to-mind-control-human-computer-interactions/</link>
					<comments>https://www.artificialintelligence-news.com/news/from-punch-cards-to-mind-control-human-computer-interactions/#respond</comments>
		
		<dc:creator><![CDATA[AI News]]></dc:creator>
		<pubDate>Wed, 05 Mar 2025 15:22:07 +0000</pubDate>
				<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[ai]]></category>
		<category><![CDATA[artificial intelligence]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104721</guid>

					<description><![CDATA[<p>The way we interact with our computers and smart devices is very different from previous years. Over the decades, human-computer interfaces have transformed, progressing from simple cardboard punch cards to keyboards and mice, and now extended reality-based AI agents that can converse with us in the same way as we do with friends. With each [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/from-punch-cards-to-mind-control-human-computer-interactions/">From punch cards to mind control: Human-computer interactions</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>The way we interact with our computers and smart devices is very different from previous years. Over the decades, human-computer interfaces have transformed, progressing from simple cardboard punch cards to keyboards and mice, and now extended reality-based AI agents that can converse with us in the same way as we do with friends.</p>



<p>With each advance in human-computer interfaces, we&#8217;re getting closer to achieving the goal of interactions with machines, making computers more accessible and integrated with our lives.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Where did it all begin?</h3>



<p>Modern computers emerged in the first half of the 20th century and relied on<a href="https://en.wikipedia.org/wiki/Punched_card"> punch cards</a> to feed data into the system and enable binary computations. The cards had a series of punched holes, and light was shone at them. If the light passed through a hole and was detected by the machine, it represented a &#8220;one&#8221;. Otherwise, it was a &#8220;zero&#8221;. As you can imagine, it was extremely cumbersome, time-consuming, and error-prone.</p>



<p>That changed with the arrival of<a href="https://en.wikipedia.org/wiki/ENIAC"> ENIAC</a>, or Electronic Numerical Integrator and Computer, widely considered to be the first &#8220;Turing-complete&#8221; device that could solve a variety of numerical problems. Instead of punch cards, operating ENIAC involved manually setting a series of switches and plugging patch cords into a board to configure the computer for specific calculations, while data was inputted via a further series of switches and buttons. It was an improvement over punch cards, but not nearly as dramatic as the arrival of the<a href="https://www.thoughtco.com/history-of-the-computer-keyboard-1991402"> modern QWERTY electronic keyboard</a> in the early 1950s.</p>



<p>Keyboards, adapted from typewriters, were a game-changer, allowing users to input text-based commands more intuitively. But while they made programming faster, accessibility was still limited to those with knowledge of the highly-technical programming commands required to operate computers.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">GUIs and touch</h3>



<p>The most important development in terms of computer accessibility was the<a href="https://www.theverge.com/2013/3/21/4127110/40-years-of-icons-the-evolution-of-the-modern-computer-interface"> graphical user interface</a> or GUI, which finally opened computing to the masses. The first GUIs appeared in the late 1960s and were later refined by companies like IBM, Apple, and Microsoft, replacing text-based commands with a visual display made up of icons, menus, and windows.</p>



<p>Alongside the GUI came the iconic &#8220;<a href="https://en.wikipedia.org/wiki/Computer_mouse">mouse</a>&#8220;, which enabled users to &#8220;point-and-click&#8221; to interact with computers. Suddenly, these machines became easily navigable, allowing almost anyone to operate one. With the arrival of the internet a few years later, the GUI and the mouse helped pave the way for the computing revolution, with computers becoming commonplace in every home and office.</p>



<p>The next major milestone in human-computer interfaces was the<a href="https://www.forbes.com/councils/forbestechcouncil/2022/07/20/a-brief-history-of-touchscreen-technology-from-the-iphone-to-multi-user-videowalls/"> touchscreen</a>, which first appeared in the late 1990s and did away with the need for a mouse or a separate keyboard. Users could now interact with their computers by tapping icons on the screen directly, pinching to zoom, and swiping left and right. Touchscreens eventually paved the way for the smartphone revolution that started with the arrival of the Apple iPhone in 2007 and, later, Android devices.</p>



<p>With the rise of mobile computing, the variety of computing devices evolved further, and in the late 2000s and early 2010s, we witnessed the emergence of wearable devices like fitness trackers and smartwatches. Such devices are designed to integrate computers into our everyday lives, and it&#8217;s possible to interact with them in newer ways, like subtle gestures and biometric signals. Fitness trackers, for instance, use sensors to keep track of how many steps we take or how far we run, and can monitor a user&#8217;s pulse to measure heart rate.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Extended reality &amp; AI avatars</h3>



<p>In the last decade, we also saw the first artificial intelligence systems, with early examples being Apple&#8217;s Siri and Amazon&#8217;s Alexa.<a href="https://www.theverge.com/24054603/chatbot-chatgpt-eliza-history-ai-assistants-video"> AI chatbots</a> use voice recognition technology to enable users to communicate with their devices using their voice.</p>



<p>As AI has advanced, these systems have become increasingly sophisticated and better able to understand complex instructions or questions, and can respond based on the context of the situation. With more advanced chatbots like ChatGPT, it&#8217;s possible to engage in lifelike conversations with machines, eliminating the need for any kind of physical input device.</p>



<p>AI is now being combined with emerging<a href="https://hqsoftwarelab.com/blog/the-history-of-ar-and-vr-a-timeline-of-notable-milestones/"> augmented reality and virtual reality</a> technologies to further refine human-computer interactions. With AR, we can insert digital information into our surroundings by overlaying it on top of our physical environment. This is enabled using VR devices like the Oculus Rift, HoloLens, and Apple Vision Pro, and further pushes the boundaries of what&#8217;s possible.</p>



<p>So-called<a href="https://en.wikipedia.org/wiki/Extended_reality"> extended reality</a>, or XR, is the latest take on the technology, replacing traditional input methods with eye-tracking, and gestures, and can provide haptic feedback, enabling users to interact with digital objects in physical environments. Instead of being restricted to flat, two-dimensional screens, our entire world becomes a computer through a blend of virtual and physical reality.</p>



<p>The convergence of XR and AI opens the doors to more possibilities.<a href="https://mawari.net"> Mawari Network</a> is bringing AI agents and chatbots into the real world through the use of XR technology. It&#8217;s creating more meaningful, lifelike interactions by<a href="https://www.blog.mawari.net/p/future-spatial-compute-mawaris-vision-transition-depin/"> streaming AI avatars</a> directly into our physical environments. The possibilities are endless – imagine an AI-powered virtual assistant standing in your home or a digital concierge that meets you in the hotel lobby, or even an AI passenger that sits next to you in your car, directing you on how to avoid the worst traffic jams. Through its decentralised DePin infrastructure, it&#8217;s enabling AI agents to drop into our lives in real-time.</p>



<p>The technology is nascent but it&#8217;s not fantasy. In Germany, tourists can call on an<a href="https://www.forbes.com/sites/suzannerowankelleher/2024/10/18/germanys-new-ai-travel-influencer-is-a-chatbot-still-working-out-some-kinks/"> avatar called Emma</a> to guide them to the best spots and eateries in dozens of German cities. Other examples include digital popstars like<a href="https://www.j-14.com/posts/who-is-naevis-meet-sm-entertainments-first-virtual-k-pop-artist/"> Naevis</a>, which is pioneering the concept of virtual concerts that can be attended from anywhere.</p>



<p>In the coming years, we can expect to see this XR-based spatial computing combined with<a href="https://builtin.com/hardware/brain-computer-interface-bci"> brain-computer interfaces</a>, which promise to let users control computers with their thoughts. BCIs use electrodes placed on the scalp and pick up the electrical signals generated by our brains. Although it&#8217;s still in its infancy, this technology promises to deliver the most effective human-computer interactions possible.</p>



<div style="height:20px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">The future will be seamless</h3>



<p>The story of the human-computer interface is still under way, and as our technological capabilities advance, the distinction between digital and physical reality will more blurred.</p>



<p>Perhaps one day soon, we&#8217;ll be living in a world where computers are omnipresent, integrated into every aspect of our lives, similar to Star Trek&#8217;s famed holodeck. Our physical realities will be merged with the digital world, and we&#8217;ll be able to communicate, find information, and perform actions using only our thoughts. This vision would have been considered fanciful only a few years ago, but the rapid pace of innovation suggests it&#8217;s not nearly so far-fetched. Rather, it&#8217;s something that the majority of us will live to see.</p>



<p><em>(Image source: Unsplash)</em></p>



<p></p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/from-punch-cards-to-mind-control-human-computer-interactions/">From punch cards to mind control: Human-computer interactions</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/from-punch-cards-to-mind-control-human-computer-interactions/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>AI Explainability and Its Immediate Impact on Legal Tech – Insights from Expert Discussion  </title>
		<link>https://www.artificialintelligence-news.com/news/explainability-for-retailers-using-ai-insights-from-experts/</link>
					<comments>https://www.artificialintelligence-news.com/news/explainability-for-retailers-using-ai-insights-from-experts/#respond</comments>
		
		<dc:creator><![CDATA[Shlomit Yaniski Ravid]]></dc:creator>
		<pubDate>Wed, 05 Mar 2025 13:09:44 +0000</pubDate>
				<category><![CDATA[Sponsored Content]]></category>
		<category><![CDATA[ai]]></category>
		<category><![CDATA[artificial intelligence]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104681</guid>

					<description><![CDATA[<p>Last week, leading experts from academia, industry, and regulatory backgrounds gathered to discuss the legal and commercial implications of AI explainability, with a particular focus on its impact in retail. Hosted by Professor Shlomit Yaniski Ravid of Yale Law and Fordham Law, the panel brought together thought leaders to address the growing need for transparency [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/explainability-for-retailers-using-ai-insights-from-experts/">AI Explainability and Its Immediate Impact on Legal Tech – Insights from Expert Discussion  </a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>Last week, leading experts from academia, industry, and regulatory backgrounds gathered to discuss the legal and commercial implications of AI explainability, with a particular focus on its impact in retail. Hosted by Professor Shlomit Yaniski Ravid of Yale Law and Fordham Law, the panel brought together thought leaders to address the growing need for transparency in AI-driven decision-making, emphasising the importance of ensuring AI operates in ethical and legal parameters and the need to &#8216;open the black box&#8217; of AI decision-making.</p>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Regulatory challenges and the new AI standard ISO 42001</h3>



<p>Tony Porter, former Surveillance Camera Commissioner for the UK Home Office, provided insights into regulatory challenges surrounding AI transparency. He highlighted the significance of ISO 42001, the international standard for AI management systems which offers a framework for responsible AI governance. &#8220;Regulations are evolving rapidly, but standards like ISO 42001 provide organisations with a structured approach to balancing innovation with accountability,&#8221; Porter said. The panel dissociation led by Prof. Yaniski Ravid featured representatives from leading AI companies, who shared how their organisations implement transparency in AI systems, particularly in retail and legal applications.</p>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Chamelio: Transforming legal decision-making with explainable AI</h3>



<p>Alex Zilberman from Chamelio, a legal intelligence platform exclusively built for in-house legal teams, addressed the role of AI in corporate legal operations. Chamelio changes how in-house legal teams operate through an AI agent that learns and uses the legal knowledge stored in its repository of contracts, policies, compliance documents, corporate records, regulatory filings, and other business-important legal documents.</p>



<p>Chamelio&#8217;s AI agent performs core legal tasks like extracting important obligations, streamlines contract reviews, monitors compliance, and delivers actionable insights that would otherwise remain buried in thousands of pages of documents. The platform integrates with existing tools and adapts to a team&#8217;s legal knowledge.</p>



<p>&#8220;Trust is the number one requirement to build a system that professionals can use,&#8221; Zilberman said. &#8220;This trust is achieved by providing as much transparency as possible. Our solution allows users to understand where each recommendation comes from, ensuring they can confirm and verify every insight.&#8221;</p>



<p>Chamelio avoids the &#8216;black box&#8217; model by letting legal professionals trace the reasoning behind AI-generated recommendations. For example, when the system encounters areas of a contract that it doesn&#8217;t recognise, instead of guessing, it flags the uncertainty and requests human input. This approach helps legal professionals control important decisions, particularly in unprecedented scenarios like clauses with no precedent or conflicting legal terms.</p>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Buffers.ai: Changing inventory optimisation</h3>



<p>Pini Usha from Buffers.ai shared insights on AI-driven inventory optimisation, an important application in retail. Buffers.ai serves medium to large retail and manufacturing brands, including H&amp;M, P&amp;G, and Toshiba, helping retailers – particularly in the fashion industry – tackle inventory optimisation challenges like forecasting, replenishment, and assortment planning. The company helps ensure the right product quantities are delivered to the correct locations, reducing instances of stockouts and excess inventory.</p>



<p>Buffers.ai offers a full-SaaS ERP plugin that integrates with systems like SAP and Priority, providing ROI in months. &#8220;Transparency is key. If businesses cannot understand how AI predicts demand fluctuations or supply chain risks, they will be hesitant to rely on it,&#8221; Usha said.</p>



<p>Buffers.ai integrates explainability tools that allow clients to visualise and adjust AI-driven forecasts, helping ensure alignment with real-time business operations and market trends. For example, when placing a new product with no historical data, the system analyses similar product trends, store characteristics, and local demand signals. If a branch has historically shown strong demand for comparable items, the system might recommend a higher quantity without any existing data for the new product. Similarly, when allocating inventory between branches and online stores, the system details factors like regional sales performance, customer traffic patterns, and online conversion rates to explain its recommendations.</p>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">Corsight AI: Facial recognition in retail and law enforcement</h3>



<p>Matan Noga from Corsight AI discussed the role of explainability in facial recognition technology, which is used increasingly for security and customer experience enhancement in retail. Corsight AI specialises in real-world facial recognition, and provides its solutions to law enforcement, airports, malls, and retailers.</p>



<p>The company&#8217;s technology is used for applications like watchlist alerting, locating missing persons, and forensic investigations. Corsight AI differentiates itself by focusing on high-speed, and real-time recognition in ways compliant with evolving privacy laws and ethical AI guidelines. The company works with government and its commercial clients to promote responsible AI adoption, emphasising the importance of explainability in building trust and ensuring ethical use.</p>



<div style="height:10px" aria-hidden="true" class="wp-block-spacer"></div>



<h3 class="wp-block-heading">ImiSight: AI-powered image intelligence</h3>



<p>Daphne Tapia from ImiSight highlighted the importance of explainability in AI-powered image intelligence, particularly in high-stakes applications like border security and environmental monitoring. ImiSight specialises in multi-sensor integration and analysis, utilising AI/ML algorithms to detect changes, anomalies, and objects in sectors like land encroachment, environmental monitoring, and infrastructure maintenance. &#8220;AI explainability means understanding why a specific object or change was detected. We prioritise traceability and transparency to ensure users can trust our system&#8217;s outputs,&#8221; Tapia said. ImiSight continuously refines its models based on real-world data and user feedback. The company collaborates with regulatory agencies to ensure its AI meets international compliance standards.</p>



<p>The panel underscored the important role of AI explainability in fostering trust, accountability, and ethical use of AI technologies, particularly in retail and other high-stakes industries. By prioritising transparency and human oversight, organisations can ensure AI systems are both effective and trustworthy, aligning with evolving regulatory standards and public expectations.</p>



<p><a href="https://www.youtube.com/watch?v=oan3UyPokKg&amp;t=202s">Watch the full session here</a></p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/explainability-for-retailers-using-ai-insights-from-experts/">AI Explainability and Its Immediate Impact on Legal Tech – Insights from Expert Discussion  </a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/explainability-for-retailers-using-ai-insights-from-experts/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Deepgram Nova-3 Medical: AI speech model cuts healthcare transcription errors</title>
		<link>https://www.artificialintelligence-news.com/news/deepgram-nova-3-medical-ai-speech-model-healthcare-transcription-errors/</link>
					<comments>https://www.artificialintelligence-news.com/news/deepgram-nova-3-medical-ai-speech-model-healthcare-transcription-errors/#respond</comments>
		
		<dc:creator><![CDATA[Ryan Daws]]></dc:creator>
		<pubDate>Tue, 04 Mar 2025 13:25:55 +0000</pubDate>
				<category><![CDATA[Applications]]></category>
		<category><![CDATA[Artificial Intelligence]]></category>
		<category><![CDATA[Companies]]></category>
		<category><![CDATA[Healthcare]]></category>
		<category><![CDATA[Industries]]></category>
		<category><![CDATA[Voice Recognition]]></category>
		<category><![CDATA[ai]]></category>
		<category><![CDATA[artificial intelligence]]></category>
		<category><![CDATA[deepgram]]></category>
		<category><![CDATA[health]]></category>
		<category><![CDATA[healthcare]]></category>
		<category><![CDATA[medical]]></category>
		<category><![CDATA[nhs]]></category>
		<category><![CDATA[speech model]]></category>
		<category><![CDATA[speech-to-text]]></category>
		<category><![CDATA[transcription]]></category>
		<guid isPermaLink="false">https://www.artificialintelligence-news.com/?p=104673</guid>

					<description><![CDATA[<p>Deepgram has unveiled Nova-3 Medical, an AI speech-to-text (STT) model tailored for transcription in the demanding environment of healthcare. Designed to integrate seamlessly with existing clinical workflows, Nova-3 Medical aims to address the growing need for accurate and efficient transcription in the UK’s public NHS and private healthcare landscape. As electronic health records (EHRs), telemedicine, [&#8230;]</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/deepgram-nova-3-medical-ai-speech-model-healthcare-transcription-errors/">Deepgram Nova-3 Medical: AI speech model cuts healthcare transcription errors</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p><a href="https://deepgram.com/">Deepgram</a> has unveiled Nova-3 Medical, an AI speech-to-text (STT) model tailored for transcription in the demanding environment of healthcare.</p>



<p>Designed to integrate seamlessly with existing clinical workflows, Nova-3 Medical aims to address the growing need for accurate and efficient transcription in the UK’s public <a href="https://www.artificialintelligence-news.com/news/nhs-receives-ai-fund-to-improve-healthcare-efficiency/">NHS</a> and private healthcare landscape.</p>



<p>As electronic health records (EHRs), telemedicine, and digital health platforms become increasingly prevalent, the demand for reliable AI-powered transcription has never been higher. However, traditional speech-to-text models often struggle with the complex and specialised vocabulary used in clinical settings, leading to errors and &#8220;hallucinations&#8221; that can compromise patient care.</p>



<p>Deepgram&#8217;s Nova-3 Medical is engineered to overcome these challenges. The model leverages advanced machine learning and specialised medical vocabulary training to accurately capture medical terms, acronyms, and clinical jargon—even in challenging audio conditions. This is particularly crucial in environments where <a href="https://www.artificialintelligence-news.com/categories/ai-industries/healthcare/">healthcare</a> professionals may move away from recording devices.</p>



<p>&#8220;Nova‑3 Medical represents a significant leap forward in our commitment to transforming clinical documentation through AI,&#8221; said Scott Stephenson, CEO of Deepgram. &#8220;By addressing the nuances of clinical language and offering unprecedented customisation, we are empowering developers to build products that improve patient care and operational efficiency.&#8221;</p>



<p>One of the key features of the model is its ability to deliver structured transcriptions that integrate seamlessly with clinical workflows and EHR systems, ensuring vital patient data is accurately organised and readily accessible. The model also offers flexible, self-service customisation, including Keyterm Prompting for up to 100 key terms, allowing developers to tailor the solution to the unique needs of various medical specialties.</p>



<figure class="wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<iframe title="How Deepgram + AWS Enhance Healthcare with Voice AI" width="800" height="600" src="https://www.youtube.com/embed/v9vYlZUGWZY?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
</div></figure>



<p>Versatile deployment options – including on-premises and Virtual Private Cloud (VPC) configurations – ensure enterprise-grade security and HIPAA compliance, which is crucial for meeting UK data protection regulations.</p>



<p>&#8220;Speech-to-text for enterprise use cases is not trivial, and there is a fundamental difference between voice AI platforms designed for enterprise use cases vs entertainment use cases,&#8221; said Kevin Fredrick, Managing Partner at <a href="http://onereach.ai">OneReach.ai</a>. &#8220;Deepgram’s Nova-3 model and Nova-3-Medical model, are leading voice AI offerings, including TTS, in terms of the accuracy, latency, efficiency, and scalability required for enterprise use cases.&#8221;</p>



<h3 class="wp-block-heading">Benchmarking Nova-3 Medical: Accuracy, speed, and efficiency</h3>



<p>Deepgram has conducted benchmarking to demonstrate the performance of Nova-3 Medical. The model claims to deliver industry-leading transcription accuracy, optimising both overall word recognition and critical medical term accuracy.</p>



<ul class="wp-block-list">
<li><strong>Word Error Rate (WER):</strong> With a median WER of 3.45%, Nova-3 Medical outperforms competitors, achieving a 63.6% reduction in errors compared to the next best competitor. This enhanced precision minimises manual corrections and streamlines workflows.</li>



<li><strong>Keyword Error Rate (KER): </strong>Crucially, Nova-3 Medical achieves a KER of 6.79%, marking a 40.35% reduction in errors compared to the next best competitor. This ensures that critical medical terms – such as drug names and conditions – are accurately transcribed, reducing the risk of miscommunication and patient safety issues.</li>
</ul>



<p>In addition to accuracy, Nova-3 Medical excels in real-time applications. The model transcribes speech 5-40x faster than many alternative speech recognition vendors, making it ideal for telemedicine and digital health platforms. Its scalable architecture ensures high performance even as transcription volumes increase.</p>



<p>Furthermore, Nova-3 Medical is designed to be cost-effective. Starting at $0.0077 per minute of streaming audio – which Deepgram claims is more than twice as affordable as leading cloud providers – it allows healthcare tech companies to reinvest in innovation and accelerate product development.</p>



<p>Deepgram&#8217;s Nova-3 Medical aims to <a href="https://www.developer-tech.com/news/developers-embracing-ai-agents-for-software-development/">empower developers</a> to build transformative medical transcription applications, driving exceptional outcomes across healthcare.</p>



<p><em>(Photo by <a href="https://unsplash.com/@swimstaralex?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash">Alexander Sinn</a>)</em></p>



<p><strong>See also: </strong><a href="https://www.artificialintelligence-news.com/news/autoscience-carl-the-first-ai-scientist-writing-peer-reviewed-papers/"><strong>Autoscience Carl: The first AI scientist writing peer-reviewed papers</strong></a></p>



<figure class="wp-block-image size-full is-resized"><a href="https://www.ai-expo.net/"><img fetchpriority="high" decoding="async" width="728" height="90" src="https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01.png" alt="" class="wp-image-11874" style="width:800px;height:auto" srcset="https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01.png 728w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-300x37.png 300w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-380x47.png 380w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-350x43.png 350w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-100x12.png 100w, https://www.artificialintelligence-news.com/wp-content/uploads/2022/04/ai-expo-world-728x-90-01-60x7.png 60w" sizes="(max-width: 728px) 100vw, 728px" /></a></figure>



<p><strong>Want to learn more about AI and big data from industry leaders?</strong> Check out<a href="https://www.ai-expo.net/"> AI &amp; Big Data Expo</a> taking place in Amsterdam, California, and London. The comprehensive event is co-located with other leading events including <a href="https://intelligentautomation-conference.com/northamerica/">Intelligent Automation Conference</a>, <a href="https://www.blockchain-expo.com/">BlockX</a>,<a href="https://digitaltransformation-week.com/"> Digital Transformation Week</a>, and <a href="https://www.cybersecuritycloudexpo.com/">Cyber Security &amp; Cloud Expo</a>.</p>



<p>Explore other upcoming enterprise technology events and webinars powered by TechForge <a href="https://techforge.pub/events/">here</a>.</p>
<p>The post <a href="https://www.artificialintelligence-news.com/news/deepgram-nova-3-medical-ai-speech-model-healthcare-transcription-errors/">Deepgram Nova-3 Medical: AI speech model cuts healthcare transcription errors</a> appeared first on <a href="https://www.artificialintelligence-news.com">AI News</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.artificialintelligence-news.com/news/deepgram-nova-3-medical-ai-speech-model-healthcare-transcription-errors/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
","status":200,"url":"https://www.artificialintelligence-news.com/feed/"},"revalidate":31536000,"tags":[]}