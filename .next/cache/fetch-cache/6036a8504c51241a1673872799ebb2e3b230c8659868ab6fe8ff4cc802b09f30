{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","access-control-allow-origin":"*","access-control-expose-headers":"X-Moose","cache-control":"private, s-maxage=0, max-age=0, must-revalidate, no-store","connection":"keep-alive","content-encoding":"gzip","content-length":"8744","content-type":"application/json; charset=UTF-8","date":"Fri, 14 Mar 2025 10:00:33 GMT","expires":"-1","nel":"{\"report_to\": \"w3-reporting-nel\", \"max_age\": 14400, \"include_subdomains\": false, \"success_fraction\": 1.0, \"failure_fraction\": 1.0}","report-to":"{\"group\": \"w3-reporting-nel\", \"max_age\": 14400, \"include_subdomains\": true,  \"endpoints\": [{ \"url\": \"https://w3-reporting-nel.reddit.com/reports\" }]}, {\"group\": \"w3-reporting\", \"max_age\": 14400, \"include_subdomains\": true, \"endpoints\": [{ \"url\": \"https://w3-reporting.reddit.com/reports\" }]}, {\"group\": \"w3-reporting-csp\", \"max_age\": 14400, \"include_subdomains\": true, \"endpoints\": [{ \"url\": \"https://w3-reporting-csp.reddit.com/reports\" }]}","server":"snooserv","set-cookie":"edgebucket=mtcnlQXJ0NsAbbv6uW; Domain=reddit.com; Max-Age=63071999; Path=/;  secure","strict-transport-security":"max-age=31536000; includeSubdomains","vary":"accept-encoding","via":"1.1 varnish","x-content-type-options":"nosniff","x-frame-options":"SAMEORIGIN","x-ratelimit-remaining":"98.0","x-ratelimit-reset":"567","x-ratelimit-used":"2","x-ua-compatible":"IE=edge","x-xss-protection":"1; mode=block"},"body":"","status":200,"url":"https://www.reddit.com/r/ChatGPT/hot.json?limit=5"},"revalidate":31536000,"tags":[]}